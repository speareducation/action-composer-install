name: Composer Install
description: Sets up PHP, then runs composer validate and install. Supports private API keys.

inputs:
  php-version:
    description: The PHP version to use
    required: true
  php-extensions:
    description: a comma-separated list of PHP extensions
    default: mbstring, json, gd, opcache, curl, bz2, sqlite3, xml, intl, zip, mbstring, readline, xmlrpc, pcov
    required: false
  composer-version:
    description: composer version
    default: 2
    required: false
  composer-api-key:
    description: An API key to use with composer
    default: null
    required: false
  validation-results-path:
    description: Path or name of directory to store composer validate results
    required: false
    default: .ci-results/composer-validation.txt

runs:
  using: composite
  steps:
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        tools: pecl, composer:v${{ inputs.composer-version }}
        extensions: ${{ inputs.php-extensions }}

    - id: composer-validate
      name: Validate composer.json and composer.lock
      shell: bash
      run: composer validate | tee "${{ inputs.valiation-results-path }}"

    - id: composer-auth
      if: inputs.composer-api-key
      name: Setup Composer Auth
      uses: speareducation/action-setup-composer-auth@main
      with:
        apiKey: ${{ inputs.composer-api-key }}

    - name: Cache Composer Packages
      uses: actions/cache@v2
      env:
        cache-name: cache-composer
      with:
        path: ./vendor
        key: composer-vendor-cache-${{ hashFiles('./composer.lock') }}
        restore-keys: composer-vendor-cache-

    - id: composer-install
      name: Composer Install
      shell: bash
      run: composer install --prefer-dist
